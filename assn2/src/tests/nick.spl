;;/************************************************************************
;; *                                                                      *
;; *                   SPL Compiler Version 3.30                          *
;; *                                                                      *
;; *                         Jianxin Xiong                                *
;; *                                                                      *
;; *                  Department of Computer Science                      *
;; *            University of Illinois at Urbana-Champaign                *
;; *                                                                      *
;; *  This software is copyrighted by the University of Illinois. You     *
;; *  are granted a free license for non-commercial use. Please read      *
;; *  the detailed license information in the file LICENSE.               *
;; *                                                                      *
;; *  Contact Information:                                                *
;; *        URL:    http://polaris.cs.uiuc.edu/SPL                        *
;; *        Email:  jxiong@cs.uiuc.edu                                    *
;; *        Phone:  (217)333-6578,  Fax: (217)333-3501.                   *
;; *                                                                      *
;; *  Latest revision date: 04/10/2002                                    *
;; *                                                                      *
;; ************************************************************************/
;;

;; This is a test file to see if the compiler can generate right code
;; for right SPL programs

(primitive BLIP SPL_SHAPE_SQUARE)
(primitive BLOOP SPL_SHAPE_SQUARE)

(template (BLIP ANY)
  (
      dounroll $p0.ny
        $y( 0 1 ) = $i0 + $x( 0 1 )
      end
  ))

(template (BLOOP ANY)
  (
      dounroll $p0.ny
        $r0 = $p0.ny - $i0
        $y( 0 1 ) = $r0 + $x( 0 1 )
      end
  ))

(operation compose    SPL_SIZE_COMPOSE)
(operation tensor     SPL_SIZE_TENSOR)

(template (compose ANY ANY) ;; ---- Amn * Bpq parameters: self(ny,nx), A(m,n), B(p,q)
	(			 
		deftemp $p2.ny
		$t0(0:1:$p2.ny_1) = call $p2( $x(0:1:$p2.nx_1) )
		$y(0:1:$p1.ny_1)  = call $p1( $t0(0:1:$p1.nx_1) )
	))

(template (tensor any any)
		;; ---- Amn x Bpq parameters: self(ny,nx), A(m,n), B(p,q)
	(
		$r0 = $p1.nx * $p2.ny
		$r1 = $r0 - 1
		deftemp $r0
		do $p1.nx
		  $t0(0:1:$p2.ny_1 $p2.ny) = call $p2( $x(0:1:$p2.nx_1 $p2.nx) )
		end
		do $p2.ny
		  $y(0:$p2.ny:$p0.ny_1 1) = call $p1( $t0(0:$p2.ny:$r1 1) )
		end
	))

(tensor (BLIP 4) (BLOOP 4))
