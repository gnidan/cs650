;;/************************************************************************
;; *                                                                      *
;; *                   SPL Compiler Version 3.30                          *
;; *                                                                      *
;; *                         Jianxin Xiong                                *
;; *                                                                      *
;; *                  Department of Computer Science                      *
;; *            University of Illinois at Urbana-Champaign                *
;; *                                                                      *
;; *  This software is copyrighted by the University of Illinois. You     *
;; *  are granted a free license for non-commercial use. Please read      *
;; *  the detailed license information in the file LICENSE.               *
;; *                                                                      *
;; *  Contact Information:                                                *
;; *        URL:    http://polaris.cs.uiuc.edu/SPL                        *
;; *        Email:  jxiong@cs.uiuc.edu                                    *
;; *        Phone:  (217)333-6578,  Fax: (217)333-3501.                   *
;; *                                                                      *
;; *  Latest revision date: 04/10/2002                                    *
;; *                                                                      *
;; ************************************************************************/
;;

;; This is a test file to see if the compiler can generate right code
;; for right SPL programs

(primitive BLIP SPL_SHAPE_SQUARE)

(template (BLIP ANY)
  (
      dounroll $p0.ny
        $y( 0 1 ) = 1 + $x( 0 1 )
      end
  ))

(primitive BLOOP SPL_SHAPE_SQUARE)

(template (BLOOP ANY)
  (
      dounroll $p0.ny
        $y( 0 1 ) = 2 + $x( 0 1 )
      end
  ))
;;
;;(define F8
;;    (BLIP 4))
;;
;;(operation JOBU SPL_SIZE_IDENT)
;;
;;(template (JOBU ANY)
;;  (
;;    dounroll $p0.ny
;;      $y( 0 1 ) = 2
;;    end
;;    ))
;;
;;(template (JOBU (BLIP ANY))
;;  (
;;    dounroll $p0.ny
;;      $y( 0 1 ) = 3
;;    end
;;    ))
;;
;;(JOBU (BLOOP 6))
;;

(operation compose    SPL_SIZE_COMPOSE)

(template (compose ANY ANY) ;; ---- Amn * Bpq parameters: self(ny,nx), A(m,n), B(p,q)
	(			 
		deftemp $p2.ny
		$t0 = call $p2( $x )
		$y  = call $p1( $t0 )
	))

(compose (compose (BLOOP 4) (BLIP 4)) (BLOOP 4))
